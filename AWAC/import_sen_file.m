function import_sen_file
%-----------------------------------------------------------------------------------------
% IMPORT_SEN_FILE Import numeric data from a .sen AWAC file as column vectors.
%
% Reads data from rows STARTROW through ENDROW of text file FILENAME.
%
% NOTE: Read the <FILENAME>.HDR file for file and variable information
%
% Example of .sen file format:
%  1   Month                            (1-12)
%  2   Day                              (1-31)
%  3   Year
%  4   Hour                             (0-23)
%  5   Minute                           (0-59)
%  6   Second                           (0-59)
%  7   Error code
%  8   Status code
%  9   Battery voltage                  (V)
% 10   Soundspeed                       (m/s)
% 11   Heading                          (degrees)
% 12   Pitch                            (degrees)
% 13   Roll                             (degrees)
% 14   Pressure                         (dbar)
% 15   Temperature                      (degrees C)
% 16   Analog input 1
% 17   Analog input 2
%
% Example:
%   = import_sen_file('awac1608wha_1685.sen');
%
% See also TEXTSCAN.
%
% History:
% Auto-generated by MATLAB on 2016/04/28 13:16:54
% 22-Jan-2017 FE Edited for use with process_AWAC.m
%
% NIWA Moorings
%-----------------------------------------------------------------------------------------

%% Initialize variables.
startRow = 1;
endRow = inf;

[filename, pathname] = uigetfile('*.sen','Select a .sen file to import');
FILENAME = fullfile(pathname, filename);


%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%2f%3f%5f%3f%3f%3f%9f%9f%6f%7f%6f%6f%6f%8f%7f%6f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(FILENAME,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
month = dataArray{:, 1};
day = dataArray{:, 2};
year = dataArray{:, 3};
hour = dataArray{:, 4};
minute = dataArray{:, 5};
second = dataArray{:, 6};
errorCode = dataArray{:, 7};
statusCode = dataArray{:, 8};
batteryVoltage = dataArray{:, 9};
soundSpeed = dataArray{:, 10};
heading = dataArray{:, 11};
pitch = dataArray{:, 12};
roll = dataArray{:, 13};
pressure = dataArray{:, 14};
temperature = dataArray{:, 15};
analog1 = dataArray{:, 16};
analog2 = dataArray{:, 17};

save(fullfile(pathname,[filename(1:end-4) '_sen.mat']),'month','day','year','hour',...
    'minute','second','errorCode','statusCode','batteryVoltage','soundSpeed','heading',...
    'pitch','roll','pressure','temperature','analog1','analog2')

disp(['Saved ' filename ' data to matlab data file ' filename(1:end-4) '_sen.mat'])






