function import_whd_file
%-----------------------------------------------------------------------------------------
% IMPORT_WHD_FILE Import numeric data from a whd AWAC file as column vectors.
%
% Reads data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example of .whd file format:
%  1   Month                            (1-12)
%  2   Day                              (1-31)
%  3   Year
%  4   Hour                             (0-23)
%  5   Minute                           (0-59)
%  6   Second                           (0-59)
%  7   Burst counter
%  8   No of wave data records
%  9   Cell position                    (m)
% 10   Battery voltage                  (V)
% 11   Soundspeed                       (m/s)
% 12   Heading                          (degrees)
% 13   Pitch                            (degrees)
% 14   Roll                             (degrees)
% 15   Minimum pressure                 (dbar)
% 16   Maximum pressure                 (dbar)
% 17   Temperature                      (degrees C)
% 18   CellSize                         (m)
% 19   Noise amplitude beam 1           (counts)
% 20   Noise amplitude beam 2           (counts)
% 21   Noise amplitude beam 3           (counts)
% 22   Noise amplitude beam 4           (counts)
% 23   AST window start                 (m)
% 24   AST window size                  (m)
% 25   AST window offset                (m)
% 
% Example:
%   = importfile('awac1608wha_1685.whd',1, 1701);
%
% See also TEXTSCAN.
%
%
% History:
% Auto-generated by MATLAB on 2016/12/16 15:52:41
% 22-Jan-2017 FE Edited for use with process_AWAC.m
%
% NIWA Moorings
%-----------------------------------------------------------------------------------------

%% Initialize variables.
startRow = 1;
endRow = inf;

[filename, pathname] = uigetfile('*.whd','Select a .wadfile to import');
FILENAME = fullfile(pathname, filename);

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%2f%3f%5f%3f%3f%3f%6f%6f%7f%6f%7f%6f%6f%6f%8f%8f%7f%7f%6f%6f%6f%6f%7f%7f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(FILENAME,'r');


%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
month               = dataArray{:, 1};
day                 = dataArray{:, 2};
year                = dataArray{:, 3};
hour                = dataArray{:, 4};
minute              = dataArray{:, 5};
second              = dataArray{:, 6};
burstCounter        = dataArray{:, 7};
noWaveDataRecords   = dataArray{:, 8};
cellPosition        = dataArray{:, 9};
batteryVoltage      = dataArray{:, 10};
soundSpeed          = dataArray{:, 11};
heading             = dataArray{:, 12};
pitch               = dataArray{:, 13};
roll                = dataArray{:, 14};
minimumPressure     = dataArray{:, 15};
maximumPressure     = dataArray{:, 16};
temperature         = dataArray{:, 17};
cellSize            = dataArray{:, 18};
noiseAmplitudeBeam1 = dataArray{:, 19};
noiseAmplitudeBeam2 = dataArray{:, 20};
noiseAmplitudeBeam3 = dataArray{:, 21};
noiseAmplitudeBeam4 = dataArray{:, 22};
astWindowStart      = dataArray{:, 23};
astWindowSize       = dataArray{:, 24};
astWindowOffset     = dataArray{:, 25};

save(fullfile(pathname,[filename(1:end-4) '_whd.mat']), 'astWindowOffset','astWindowSize',...
    'astWindowStart', 'batteryVoltage', 'burstCounter', 'cellPosition', 'cellSize',...
    'day','heading','hour','maximumPressure','minimumPressure',...
    'minute','month','noWaveDataRecords','noiseAmplitudeBeam1','noiseAmplitudeBeam2',...
    'noiseAmplitudeBeam3','noiseAmplitudeBeam4','pitch','roll','second','soundSpeed',...
    'temperature','year');

disp(['Saved ' filename ' data to matlab data file ' filename(1:end-4) '_whd.mat'])

